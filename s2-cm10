#!/bin/bash
#

#****************************************************************
## Start timer:
START=$(date +%s)

#****************************************************************
## Set basic parameters here:
target=$1
out=$2
top=$3
sec=$4
romname=$5
romversion=$6

#****************************************************************
## Checkout correct recovery:
cd ~/android/system/bootable/recovery
git checkout mackay

#****************************************************************
## Checkout correct buildscripts:
cd ~/android/system/buildscripts
git checkout $target

#****************************************************************
## Set ROM version in common.mk:
cd ~/android/system/vendor/cm
sed "/Mackay/c\    CM_VERSION := `echo $romname`_`echo $romversion`" ~/android/system/vendor/cm/config/common.mk > ~/android/system/vendor/cm/config/common.updated
mv ~/android/system/vendor/cm/config/common.updated ~/android/system/vendor/cm/config/common.mk
git add config/common.mk
git commit -m "Bump ROM version to `echo $romversion`"
cd ~/android/system/

#****************************************************************
## Clean environment:
make installclean
rm $out/system/build.prop
rm $out/obj/PACKAGING/target_files_intermediates/cm_$target-target_files-eng.kasper.zip
rm $out/obj/PACKAGING/target_files_intermediates/cm_$target-target_files-eng.kasper/SYSTEM/build.prop

#****************************************************************
## Make the build:
./buildscripts/samsung/build.sh $target

#****************************************************************
## Finish off the ROM by packing in gapps & updated script:
finalize "${target}" "${out}" "${top}" "${sec}" "${romname}" "${romversion}"

#****************************************************************
## Move the kernel to the Sync location:
mv $out/CM* ~/android/system/finalize_build/AndroidFinished

#****************************************************************
## Report timer:
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}Elapsed: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
