#!/bin/bash
#

#****************************************************************
## Start timer:
START=$(date +%s)

#****************************************************************
## Set basic parameters here:
trgt=$1
finalout=$2
androidtop=$3
secsign=$4
romname=$5
romversion=$6
cmversion=$7

#****************************************************************
## Clean environment:
cd $androidtop
make installclean
rm $finalout/system/build.prop
rm $finalout/obj/PACKAGING/target_files_intermediates/cm_$trgt-target_files-eng.kasper.zip
rm $finalout/obj/PACKAGING/target_files_intermediates/cm_$trgt-target_files-eng.kasper/SYSTEM/build.prop

#****************************************************************
## Set ROM version in common.mk:
cd $androidtop/vendor/cm
sed "/Mackay/c\    CM_VERSION := `echo $romname`_`echo $romversion`" $androidtop/vendor/cm/config/common.mk > $androidtop/vendor/cm/config/common.updated
mv $androidtop/vendor/cm/config/common.updated $androidtop/vendor/cm/config/common.mk
git add config/common.mk
git commit -m "Bump ROM version to `echo $romversion`"

#****************************************************************
## Copy ariesve overlay:
if [ "$trgt" = "ariesve" ]
then
echo "copy S-plus overlay"
cp -r ~/AndroidFlash/ariesve/ariesve_files/* $androidtop
fi

#****************************************************************
## Make the build:
cd $androidtop/
. build/envsetup.sh && brunch $trgt

#****************************************************************
## Finish off the ROM by packing in gapps & updated script:
build_rom_finalize "${trgt}" "${finalout}" "${androidtop}" "${secsign}" "${romname}" "${romversion}" "${cmversion}"

#****************************************************************
## Remove ariesve overlay:
if [ "$trgt" = "ariesve" ]
then
echo "remove S-plus overlay"
cd $androidtop/frameworks/av
git reset --hard
cd $androidtop/frameworks/base
git reset --hard
cd $androidtop/frameworks/native
git reset --hard
cd $androidtop/hardware/qcom/audio
git reset --hard
fi

#****************************************************************
## Report timer:
END=$(date +%s)
ELAPSED=$((END - START))
E_MIN=$((ELAPSED / 60))
E_SEC=$((ELAPSED - E_MIN * 60))
printf "${txtgrn}Elapsed: "
[ $E_MIN != 0 ] && printf "%d min(s) " $E_MIN
printf "%d sec(s)\n ${txtrst}" $E_SEC
