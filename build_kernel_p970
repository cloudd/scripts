#!/bin/bash
#

#****************************************************************
## Set basic parameters:
trgt=$1
finalout=$2
androidtop=$3
secsign=$4
kernelname=Mackay_kernel
kernelversion=3.3_p970

#****************************************************************
## Clean build environment:
cd $androidtop
make installclean
rm $finalout/boot.img

#****************************************************************
## Checkout correct kernel:
cd $androidtop/kernel/lge/p970
git checkout mackay-cm101

#****************************************************************
## Set kernel version in init:
cd $androidtop/kernel/lge/p970
sed "/Infamous/c\	\" ("`echo $kernelname`_`echo $kernelversion`")\"" $androidtop/kernel/lge/p970/init/version.c > $androidtop/kernel/lge/p970/init/version.vc
mv $androidtop/kernel/lge/p970/init/version.vc $androidtop/kernel/lge/p970/init/version.c
git add $androidtop/kernel/lge/p970/init/version.c
git commit -m "Bump kernel version to `echo $kernelversion`"

#****************************************************************
## Build the kernel:
cd $androidtop
. build/envsetup.sh
breakfast p970
mka bootimage

#****************************************************************
## Check whether other prerequisites need to be build:
if [ ! -e $androidtop/out/host/linux-x86/framework/signapk.jar ]
then
  echo "Signapk.jar not found, rebuilding..."
  mka signapk
fi

#****************************************************************
## Check whether build finished succesfully:
echo "Check whether CM10.1 p970 build finished succesfully"
if [ -e $finalout/boot.img ]
then
  echo "Build finished succesfully"
else
  echo "Build not found, probably a compile error occured"
  exit 0
fi

#****************************************************************
## Determine name of the zip:
name="`echo $kernelname`_`echo $kernelversion`"

#****************************************************************
## Create & sign the zip:
cd $finalout

rm -rf kernel_zip
mkdir -p kernel_zip/system/lib/modules
mkdir -p kernel_zip/META-INF/com/google/android

echo "Copying boot.img ..."
cp boot.img kernel_zip/
echo "Copying kernel modules ..."
cp -R system/lib/modules/* kernel_zip/system/lib/modules
echo "Copying update-binary ..."
cp ~/android/scripts/finalize_kernel/p970/update-binary kernel_zip/META-INF/com/google/android/update-binary
echo "Copying updater-script ..."
cat ~/android/scripts/finalize_kernel/p970/kernel_updater-script > kernel_zip/META-INF/com/google/android/updater-script
                
echo "Zipping package..."
cd kernel_zip
zip -qr ../$name.zip ./
cd $finalout

echo "Signing package..."
java -jar $androidtop/out/host/linux-x86/framework/signapk.jar $secsign/testkey.x509.pem $secsign/testkey.pk8 $name.zip $name-signed.zip
rm $name.zip
echo -e "${txtgrn}Package complete:${txtrst} $finalout/$name-signed.zip"
md5sum $name-signed.zip

#****************************************************************
## Copy zip to final location:
echo "Copying fininalized kernel-zip to AndroidFinal directory"
mv $finalout/$name-signed.zip ~/AndroidFlash/$trgt/kernel
cd $androidtop
